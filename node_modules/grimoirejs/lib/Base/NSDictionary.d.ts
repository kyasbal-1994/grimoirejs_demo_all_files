import NSIdentity from "./NSIdentity";
declare class NSDictionary<V> {
    private _nameObjectMap;
    private _fqnObjectMap;
    set(key: NSIdentity, value: V): void;
    delete(key: NSIdentity): void;
    get(name: string): V;
    get(ns: string, name: string): V;
    get(nsi: NSIdentity): V;
    get(element: Element): V;
    get(attribute: Attr): V;
    fromFQN(fqn: string): V;
    isAmbigious(name: string): boolean;
    has(name: string): boolean;
    pushDictionary(dict: NSDictionary<V>): NSDictionary<V>;
    toArray(): V[];
    clone(): NSDictionary<V>;
    forEach(callback: (value: V, fqn: string) => void): NSDictionary<V>;
    map<T>(callback: ((value: V, fqn: string) => T)): NSDictionary<T>;
    clear(): void;
}
export default NSDictionary;
