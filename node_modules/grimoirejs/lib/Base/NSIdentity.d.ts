/**
 * The class to identity with XML namespace feature.
 */
declare class NSIdentity {
    /**
     * Namespace of this identity
     * @type {string}
     */
    ns: string;
    /**
     * Short name for this identity
     * @type {string}
     */
    name: string;
    /**
     * Full qualified name of this identity
     * @type {string}
     */
    fqn: string;
    /**
     * Generate an instance from Full qualified name.
     * @param  {string}             fqn [description]
     * @return {NSIdentity}     [description]
     */
    static fromFQN(fqn: string): NSIdentity;
    /**
     * Make sure given name is valid for using in identity.
     * | is prohibited for using in name or namespace.
     * . is prohibited for using in name.
     * All lowercase alphabet will be transformed into uppercase.
     * @param  {string} name        [A name to verify]
     * @param  {[type]} noDot=false [Ensure not using dot or not]
     * @return {string}             [Valid name]
     */
    private static _ensureValidIdentity(name, noDot?);
    constructor(name: string);
    constructor(ns: string, name: string);
}
export default NSIdentity;
