class ComponentInterface {
    constructor(components) {
        this.components = components;
    }
    get(i1, i2, i3) {
        const c = this.components;
        if (i1 === void 0) {
            if (c.length === 0 || c[0].length === 0 || c[0][0].length === 0) {
                return null;
            }
            else if (c.length === 1 && c[0].length === 1 || c[0][0].length === 1) {
                return c[0][0][0];
            }
            throw new Error("There are too many candidate");
        }
        else if (i2 === void 0) {
            if (c.length === 0 || c[0].length === 0 || c[0][0].length <= i1) {
                return null;
            }
            else if (c.length === 1 && c[0].length === 1) {
                return c[0][0][i1];
            }
            throw new Error("There are too many candidate");
        }
        else if (i3 === void 0) {
            if (c.length === 0 || c[0].length <= i2 || c[0][0].length <= i1) {
                return null;
            }
            else if (c.length === 1) {
                return c[0][i2][i1];
            }
            throw new Error("There are too many candidate");
        }
        else {
            if (c.length <= i3 || c[0].length <= i2 || c[0][0].length <= i1) {
                return null;
            }
            return c[i3][i2][i1];
        }
    }
    forEach(f) {
        this.components.forEach((tree, ti) => {
            tree.forEach((nodes, ni) => {
                nodes.forEach((comp, ci) => {
                    f(comp, ci, ni, ti);
                });
            });
        });
        return this;
    }
    attr(attrName, value) {
        if (value === void 0) {
            // return Attribute.
            return this.components[0][0][0].getValue(attrName).Value;
        }
        else {
            // set value.
            this.forEach((component) => {
                component.setValue(attrName, value);
            });
        }
    }
    on() {
        // TODO implement
        return;
    }
    off() {
        // TODO implement
        return;
    }
}
export default ComponentInterface;
//# sourceMappingURL=ComponentInterface.js.map