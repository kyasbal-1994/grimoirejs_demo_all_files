import Attribute from "../Node/Attribute";
import IComponentInterface from "./IComponentInterface";
import Component from "../Node/Component";
declare class ComponentInterface implements IComponentInterface {
    components: Component[][][];
    constructor(components: Component[][][]);
    get<T extends Component>(): T;
    get<T extends Component>(componentIndex: number): T;
    get<T extends Component>(nodeIndex: number, componentIndex: number): T;
    get<T extends Component>(treeIndex: number, nodeIndex: number, componentIndex: number): T;
    forEach(f: (v: Component, compIndex: number, nodeIndex: number, treeIndex: number) => void): ComponentInterface;
    attr(attrName: string): Attribute;
    attr(attrName: string, value: any): void;
    on(): any;
    off(): any;
}
export default ComponentInterface;
