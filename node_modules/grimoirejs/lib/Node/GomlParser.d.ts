import GomlNode from "./GomlNode";
/**
 * Parser of Goml to Node utilities.
 * This class do not store any nodes and goml properties.
 */
declare class GomlParser {
    /**
     * Domをパースする
     * @param  {Element}           source    [description]
     * @param  {GomlNode}          parent    あればこのノードにaddChildされる
     * @return {GomlNode}                    ルートノード
     */
    static parse(source: Element, parent: GomlNode, scriptTag: HTMLScriptElement): GomlNode;
    /**
     * GomlNodeのインスタンス化。GrimoireInterfaceへの登録
     * @param  {HTMLElement}      elem         [description]
     * @param  {GomlConfigurator} configurator [description]
     * @return {GomlTreeNodeBase}              [description]
     */
    private static _createNode(elem);
    /**
     * .COMPONENTSのパース。
     * @param {GomlNode} node          アタッチされるコンポーネント
     * @param {Element}  componentsTag .COMPONENTSタグ
     */
    private static _parseComponents(node, componentsTag);
    private static _isElement(node);
    private static _isComponentsTag(element);
}
export default GomlParser;
