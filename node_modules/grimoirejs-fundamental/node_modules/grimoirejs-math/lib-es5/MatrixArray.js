"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Matrix = require("./Matrix");

var _Matrix2 = _interopRequireDefault(_Matrix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MatrixArray = function () {
    function MatrixArray(length) {
        _classCallCheck(this, MatrixArray);

        this.rawElements = new Float32Array(length * 16);
    }

    _createClass(MatrixArray, [{
        key: "getAt",
        value: function getAt(index) {
            var firstIndex = index * 16;
            return new _Matrix2.default(this.rawElements.slice(firstIndex, firstIndex + 16));
        }
    }, {
        key: "setAt",
        value: function setAt(index, matrix) {
            for (var i = 0; i < 16; i++) {
                this.rawElements[16 * index + i] = matrix.rawElements[i];
            }
        }
    }], [{
        key: "getIdentityMatrixArray",
        value: function getIdentityMatrixArray(length) {
            var matArray = new MatrixArray(length);
            for (var i = 0; i < length; i++) {
                for (var c = 0; c < 4; c++) {
                    for (var r = 0; r < 4; r++) {
                        matArray.rawElements[i * 16 + 4 * c + r] = c === r ? 1 : 0;
                    }
                }
            }
            return matArray;
        }
    }]);

    return MatrixArray;
}();

exports.default = MatrixArray;
//# sourceMappingURL=MatrixArray.js.map