"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _VectorBase2 = require("./VectorBase");

var _VectorBase3 = _interopRequireDefault(_VectorBase2);

var _Vector = require("./Vector4");

var _Vector2 = _interopRequireDefault(_Vector);

var _Colors = require("./Colors");

var _Colors2 = _interopRequireDefault(_Colors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Color4 = function (_VectorBase) {
    _inherits(Color4, _VectorBase);

    function Color4(r, g, b, a) {
        _classCallCheck(this, Color4);

        var _this = _possibleConstructorReturn(this, (Color4.__proto__ || Object.getPrototypeOf(Color4)).call(this));

        _this.rawElements = [r, g, b, a];
        return _this;
    }
    /// Color parser for css like syntax


    _createClass(Color4, [{
        key: "toVector",
        value: function toVector() {
            return new _Vector2.default(this.R, this.G, this.B, this.A);
        }
    }, {
        key: "equalWith",
        value: function equalWith(col) {
            return Color4.equals(col, this);
        }
    }, {
        key: "toString",
        value: function toString() {
            return "rgba(" + Math.round(this.R * 255) + ", " + Math.round(this.G * 255) + ", " + Math.round(this.B * 255) + ", " + Math.round(this.A * 255) + ")";
        }
    }, {
        key: "toDisplayString",
        value: function toDisplayString() {
            var st = "#";
            st += Math.round(this.R * 0xff).toString(16).toUpperCase();
            st += Math.round(this.G * 0xff).toString(16).toUpperCase();
            st += Math.round(this.B * 0xff).toString(16).toUpperCase();
            st += Math.round(this.A * 0xff).toString(16).toUpperCase();
            return "Color4(" + this.R + ", " + this.G + ", " + this.B + ", " + this.A + ", " + st + ")";
        }
    }, {
        key: "R",
        get: function get() {
            return this.rawElements[0];
        }
    }, {
        key: "G",
        get: function get() {
            return this.rawElements[1];
        }
    }, {
        key: "B",
        get: function get() {
            return this.rawElements[2];
        }
    }, {
        key: "A",
        get: function get() {
            return this.rawElements[3];
        }
    }, {
        key: "ElementCount",
        get: function get() {
            return 4;
        }
    }], [{
        key: "internalParse",
        value: function internalParse(color, isFirst, tryParse) {
            if (isFirst && _Colors2.default[color]) {
                return Color4.internalParse(_Colors2.default[color], false);
            }
            var m = void 0;
            if (isFirst) {
                m = color.match(/^#([0-9a-f]{3})$/i);
                // #fff
                if (m) {
                    var s = m[1];
                    return new Color4(parseInt(s.charAt(0), 16) / 0xf, parseInt(s.charAt(1), 16) / 0xf, parseInt(s.charAt(2), 16) / 0xf, 1);
                }
            }
            if (isFirst) {
                m = color.match(/^#([0-9a-f]{4})$/i);
                // #ffff
                if (m) {
                    var _s = m[1];
                    return new Color4(parseInt(_s.charAt(0), 16) / 0xf, parseInt(_s.charAt(1), 16) / 0xf, parseInt(_s.charAt(2), 16) / 0xf, parseInt(_s.charAt(3), 16) / 0xf);
                }
            }
            // #ffffff
            m = color.match(/^#([0-9a-f]{6})$/i);
            if (m) {
                var _s2 = m[1];
                return new Color4(parseInt(_s2.substr(0, 2), 16) / 0xff, parseInt(_s2.substr(2, 2), 16) / 0xff, parseInt(_s2.substr(4, 2), 16) / 0xff, 1);
            }
            // #ffffffff
            if (isFirst) {
                m = color.match(/^#([0-9a-f]{8})$/i);
                if (m) {
                    var _s3 = m[1];
                    return new Color4(parseInt(_s3.substr(0, 2), 16) / 0xff, parseInt(_s3.substr(2, 2), 16) / 0xff, parseInt(_s3.substr(4, 2), 16) / 0xff, parseInt(_s3.substr(6, 2), 16) / 0xff);
                }
            }
            var n = color.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i);
            if (n && isFirst) {
                return new Color4(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff, 1);
            }
            n = color.match(/^rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\,\s*(\d+)\s*\)$/i);
            if (n && isFirst) {
                var d = parseInt(n[4], 10);
                d = d <= 1 ? d : d / 0xff;
                return new Color4(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff, parseInt(n[4], 10));
            }
            if (tryParse) {
                return undefined;
            }
            throw new Error("Unexpected color string" + color);
        }
    }, {
        key: "parse",
        value: function parse(color, tryParse) {
            return Color4.internalParse(color, true, tryParse);
        }
    }, {
        key: "equals",
        value: function equals(col1, col2) {
            return _VectorBase3.default.__elementEquals(col1, col2);
        }
    }]);

    return Color4;
}(_VectorBase3.default);

exports.default = Color4;
//# sourceMappingURL=Color4.js.map