"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Vector = require("./Vector2");

var _Vector2 = _interopRequireDefault(_Vector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Rectangle = function () {
    function Rectangle(left, top, width, height) {
        _classCallCheck(this, Rectangle);

        this._left = left;
        this._top = top;
        this._width = width;
        this._height = height;
    }

    _createClass(Rectangle, [{
        key: "contains",
        value: function contains(xOrPoint, y) {
            var x = void 0;
            if (xOrPoint instanceof _Vector2.default) {
                x = xOrPoint.X;
                y = xOrPoint.Y;
            } else {
                x = xOrPoint;
            }
            return this.Left <= x && this.Right >= x && this.Top <= y && this.Bottom >= y;
        }
    }, {
        key: "toLocal",
        value: function toLocal(xOrPoint, y) {
            var x = void 0;
            if (xOrPoint instanceof _Vector2.default) {
                x = xOrPoint.X;
                y = xOrPoint.Y;
            } else {
                x = xOrPoint;
            }
            x -= this.Left;
            y -= this.Top;
            return xOrPoint instanceof _Vector2.default ? new _Vector2.default(x, y) : [x, y];
        }
    }, {
        key: "toString",
        value: function toString() {
            return "Rectangle(" + this.Left + "," + this.Top + "-" + this.Right + "," + this.Bottom + ")";
        }
    }, {
        key: "Left",
        get: function get() {
            return this._left;
        }
    }, {
        key: "Right",
        get: function get() {
            return this.Left + this.Width;
        }
    }, {
        key: "Top",
        get: function get() {
            return this._top;
        }
    }, {
        key: "Bottom",
        get: function get() {
            return this._top + this._height;
        }
    }, {
        key: "Width",
        get: function get() {
            return this._width;
        }
    }, {
        key: "Height",
        get: function get() {
            return this._height;
        }
    }], [{
        key: "equals",
        value: function equals(r1, r2) {
            return r1.Left === r2.Left && r1.Right === r2.Right && r1.Top === r2.Top && r1.Bottom === r2.Bottom;
        }
    }, {
        key: "edgeSizeEquals",
        value: function edgeSizeEquals(r1, r2) {
            return r1.Width === r2.Width && r1.Height === r2.Height;
        }
    }]);

    return Rectangle;
}();

exports.default = Rectangle;
//# sourceMappingURL=Rectangle.js.map