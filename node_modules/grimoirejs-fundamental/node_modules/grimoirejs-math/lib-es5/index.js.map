{"version":3,"sources":["../product/index.es2016.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass VectorBase {\n    constructor() {\n        this._magnitudeSquaredCache = -1;\n        this._magnitudeCache = -1;\n    }\n    get magnitude() {\n        if (this._magnitudeCache < 0) {\n            this._magnitudeCache = Math.sqrt(this.sqrMagnitude);\n        }\n        return this._magnitudeCache;\n    }\n    get ElementCount() {\n        return 0;\n    }\n    get sqrMagnitude() {\n        if (this._magnitudeSquaredCache < 0) {\n            let sum = 0;\n            let r = this.rawElements;\n            for (let i = 0; i < this.ElementCount; i++) {\n                sum += r[i] * r[i];\n            }\n            this._magnitudeSquaredCache = sum;\n        }\n        return this._magnitudeSquaredCache;\n    }\n    static __elementEquals(v1, v2) {\n        if (v1.ElementCount !== v2.ElementCount) {\n            return false;\n        }\n        for (let i = 0; i < v1.ElementCount; i++) {\n            if (v1.rawElements[i] !== v2.rawElements[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static __nearlyElementEquals(v1, v2) {\n        if (v1.ElementCount !== v2.ElementCount) {\n            return false;\n        }\n        let error = 0.01;\n        for (let i = 0; i < v1.ElementCount; i++) {\n            if (Math.abs(v1.rawElements[i] - v2.rawElements[i]) > error) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static __fromGenerationFunction(v1, v2, gen) {\n        let f = new Float32Array(v1.ElementCount);\n        for (let i = 0; i < f.length; i++) {\n            f[i] = gen(i, v1, v2);\n        }\n        return f;\n    }\n    static __parse(str) {\n        const checkRegex = /(-?)([\\d,E\\+\\-\\.]+)?(n)?\\(([-\\d,E\\+\\.\\s]+)\\)/g;\n        const matches = checkRegex.exec(str);\n        if (matches) {\n            if (!matches[4]) {\n                throw new Error(`The specified string '${str}' is not containing braced vector.`);\n            }\n            return {\n                needNormalize: matches[3] === \"n\",\n                needNegate: matches[1] === \"-\",\n                coefficient: parseFloat(matches[2]),\n                elements: VectorBase._parseRawVector(matches[4])\n            };\n        }\n        else {\n            // Assume this is simplified format.\n            return {\n                needNormalize: false,\n                needNegate: false,\n                elements: VectorBase._parseRawVector(str),\n                coefficient: undefined\n            };\n        }\n    }\n    static _parseRawVector(str) {\n        const splitted = str.split(\",\");\n        const result = new Array(splitted.length);\n        for (let i = 0; i < splitted.length; i++) {\n            result[i] = parseFloat(splitted[i]);\n            if (isNaN(result[i])) {\n                throw new Error(`Unexpected vector string ${str}`);\n            }\n        }\n        return result;\n    }\n}\n\nfunction interopDefault(ex) {\n\treturn ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar common = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Configuration Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\nglMatrix.ENABLE_SIMD = false;\n\n// Capability detection\nconst global = new Function('return this')();\nglMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === global.Float32Array) && ('SIMD' in global);\nglMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    glMatrix.ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} a Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nglMatrix.equals = function(a, b) {\n\treturn Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nmodule.exports = glMatrix;\n});\n\nvar common$1 = interopDefault(common);\n\n\nvar require$$0 = Object.freeze({\n    default: common$1\n});\n\nvar mat2$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nmat2.fromValues = function(m00, m01, m10, m11) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nmat2.set = function(out, m00, m01, m10, m11) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nmat2.sub = mat2.subtract;\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nmat2.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nmat2.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\nmodule.exports = mat2;\n});\n\nvar mat2$2 = interopDefault(mat2$1);\n\n\nvar require$$7 = Object.freeze({\n    default: mat2$2\n});\n\nvar mat2d$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nmat2d.fromValues = function(a, b, c, d, tx, ty) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nmat2d.set = function(out, a, b, c, d, tx, ty) {\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nmat2d.sub = mat2d.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nmat2d.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n};\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nmat2d.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n};\n\nmodule.exports = mat2d;\n});\n\nvar mat2d$2 = interopDefault(mat2d$1);\n\n\nvar require$$6 = Object.freeze({\n    default: mat2d$2\n});\n\nvar mat3$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nmat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nmat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n};\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nmat3.sub = mat3.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nmat3.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n};\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nmat3.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n};\n\n\nmodule.exports = mat3;\n});\n\nvar mat3$2 = interopDefault(mat3$1);\n\n\nvar require$$2 = Object.freeze({\n    default: mat3$2\n});\n\nvar mat4$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {\n  scalar: {},\n  SIMD: {}\n};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nmat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nmat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.transpose = function(out, a) {\n    var a0, a1, a2, a3,\n        tmp01, tmp23,\n        out0, out1, out2, out3;\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    a1 = SIMD.Float32x4.load(a, 4);\n    a2 = SIMD.Float32x4.load(a, 8);\n    a3 = SIMD.Float32x4.load(a, 12);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 0,  out0);\n    SIMD.Float32x4.store(out, 4,  out1);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 8,  out2);\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Transpse a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;\n\n/**\n * Inverts a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Inverts a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.invert = function(out, a) {\n  var row0, row1, row2, row3,\n      tmp1,\n      minor0, minor1, minor2, minor3,\n      det,\n      a0 = SIMD.Float32x4.load(a, 0),\n      a1 = SIMD.Float32x4.load(a, 4),\n      a2 = SIMD.Float32x4.load(a, 8),\n      a3 = SIMD.Float32x4.load(a, 12);\n\n  // Compute matrix adjugate\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  // Compute matrix determinant\n  det   = SIMD.Float32x4.mul(row0, minor0);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);\n  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);\n  det   = SIMD.Float32x4.sub(\n               SIMD.Float32x4.add(tmp1, tmp1),\n               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));\n  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);\n  if (!det) {\n      return null;\n  }\n\n  // Compute matrix inverse\n  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));\n  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));\n  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));\n  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));\n  return out;\n}\n\n/**\n * Inverts a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;\n\n/**\n * Calculates the adjugate of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.adjoint = function(out, a) {\n  var a0, a1, a2, a3;\n  var row0, row1, row2, row3;\n  var tmp1;\n  var minor0, minor1, minor2, minor3;\n\n  a0 = SIMD.Float32x4.load(a, 0);\n  a1 = SIMD.Float32x4.load(a, 4);\n  a2 = SIMD.Float32x4.load(a, 8);\n  a3 = SIMD.Float32x4.load(a, 12);\n\n  // Transpose the source matrix.  Sort of.  Not a true transpose operation\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  SIMD.Float32x4.store(out, 0,  minor0);\n  SIMD.Float32x4.store(out, 4,  minor1);\n  SIMD.Float32x4.store(out, 8,  minor2);\n  SIMD.Float32x4.store(out, 12, minor3);\n  return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's explicitly using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand, must be a Float32Array\n * @param {mat4} b the second operand, must be a Float32Array\n * @returns {mat4} out\n */\nmat4.SIMD.multiply = function (out, a, b) {\n    var a0 = SIMD.Float32x4.load(a, 0);\n    var a1 = SIMD.Float32x4.load(a, 4);\n    var a2 = SIMD.Float32x4.load(a, 8);\n    var a3 = SIMD.Float32x4.load(a, 12);\n\n    var b0 = SIMD.Float32x4.load(b, 0);\n    var out0 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 0, out0);\n\n    var b1 = SIMD.Float32x4.load(b, 4);\n    var out1 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 4, out1);\n\n    var b2 = SIMD.Float32x4.load(b, 8);\n    var out2 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 8, out2);\n\n    var b3 = SIMD.Float32x4.load(b, 12);\n    var out3 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),\n                        SIMD.Float32x4.add(\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Multiplies two mat4's explicitly not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.scalar.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two mat4's using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.scalar.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.SIMD.translate = function (out, a, v) {\n    var a0 = SIMD.Float32x4.load(a, 0),\n        a1 = SIMD.Float32x4.load(a, 4),\n        a2 = SIMD.Float32x4.load(a, 8),\n        a3 = SIMD.Float32x4.load(a, 12),\n        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);\n\n    if (a !== out) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];\n        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];\n    }\n\n    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));\n    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));\n    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));\n\n    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));\n    SIMD.Float32x4.store(out, 12, t0);\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scalar.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.SIMD.scale = function(out, a, v) {\n    var a0, a1, a2;\n    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    SIMD.Float32x4.store(\n        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));\n\n    a1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(\n        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));\n\n    a2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(\n        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));\n\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n */\nmat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateX = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n      out[0]  = a[0];\n      out[1]  = a[1];\n      out[2]  = a[2];\n      out[3]  = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;\n\n/**\n * Rotates a matrix by the given angle around the Y axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateY = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Z axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateZ = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nmat4.getTranslation = function (out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n};\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nmat4.getRotation = function (out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) { \n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S; \n    out[2] = (mat[1] - mat[4]) / S; \n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { \n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S; \n    out[2] = (mat[8] + mat[2]) / S; \n  } else if (mat[5] > mat[10]) { \n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S; \n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S; \n  } else { \n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n\n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n};\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n};\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nmat4.sub = mat4.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nmat4.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n};\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nmat4.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    out[9] = a[9] + (b[9] * scale);\n    out[10] = a[10] + (b[10] * scale);\n    out[11] = a[11] + (b[11] * scale);\n    out[12] = a[12] + (b[12] * scale);\n    out[13] = a[13] + (b[13] * scale);\n    out[14] = a[14] + (b[14] * scale);\n    out[15] = a[15] + (b[15] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && \n           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && \n           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.equals = function (a, b) {\n    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],\n        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], \n        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], \n        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],\n        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], \n        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], \n        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n};\n\n\n\nmodule.exports = mat4;\n});\n\nvar mat4$2 = interopDefault(mat4$1);\n\n\nvar require$$4 = Object.freeze({\n  default: mat4$2\n});\n\nvar vec3$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nvec3.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nvec3.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nvec3.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2];\n    var b0 = b[0], b1 = b[1], b2 = b[2];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n};\n\nmodule.exports = vec3;\n});\n\nvar vec3$2 = interopDefault(vec3$1);\n\n\nvar require$$1 = Object.freeze({\n  default: vec3$2\n});\n\nvar vec4$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nvec4.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nvec4.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nvec4.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\nmodule.exports = vec4;\n});\n\nvar vec4$2 = interopDefault(vec4$1);\n\n\nvar require$$0$1 = Object.freeze({\n  default: vec4$2\n});\n\nvar quat$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\nvar mat3 = interopDefault(require$$2);\nvar vec3 = interopDefault(require$$1);\nvar vec4 = interopDefault(require$$0$1);\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nquat.getAxisAngle = function(out_axis, q) {\n    var rad = Math.acos(q[3]) * 2.0;\n    var s = Math.sin(rad / 2.0);\n    if (s != 0.0) {\n        out_axis[0] = q[0] / s;\n        out_axis[1] = q[1] / s;\n        out_axis[2] = q[2] / s;\n    } else {\n        // If s is zero, return any axis (no rotation - axis does not matter)\n        out_axis[0] = 1;\n        out_axis[1] = 0;\n        out_axis[2] = 0;\n    }\n    return rad;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.equals = vec4.equals;\n\nmodule.exports = quat;\n});\n\nvar quat$2 = interopDefault(quat$1);\n\n\nvar require$$3 = Object.freeze({\n  default: quat$2\n});\n\nvar vec2$1 = createCommonjsModule(function (module) {\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = interopDefault(require$$0);\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nvec2.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nvec2.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nvec2.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1];\n    var b0 = b[0], b1 = b[1];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n};\n\nmodule.exports = vec2;\n});\n\nvar vec2$2 = interopDefault(vec2$1);\n\n\nvar require$$2$1 = Object.freeze({\n  default: vec2$2\n});\n\nvar glMatrix = createCommonjsModule(function (module, exports) {\n/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = interopDefault(require$$0);\nexports.mat2 = interopDefault(require$$7);\nexports.mat2d = interopDefault(require$$6);\nexports.mat3 = interopDefault(require$$2);\nexports.mat4 = interopDefault(require$$4);\nexports.quat = interopDefault(require$$3);\nexports.vec2 = interopDefault(require$$2$1);\nexports.vec3 = interopDefault(require$$1);\nexports.vec4 = interopDefault(require$$0$1);\n});\n\ninteropDefault(glMatrix);\nvar vec4 = glMatrix.vec4;\nvar vec3 = glMatrix.vec3;\nvar vec2 = glMatrix.vec2;\nvar quat = glMatrix.quat;\nvar mat4 = glMatrix.mat4;\nvar glMatrix$$1 = glMatrix.glMatrix;\n\nclass Vector3 extends VectorBase {\n    constructor(x, y, z) {\n        super();\n        if (typeof y === \"undefined\") {\n            this.rawElements = x;\n            return;\n        }\n        this.rawElements = [x, y, z];\n    }\n    static get XUnit() {\n        return new Vector3(1, 0, 0);\n    }\n    static get YUnit() {\n        return new Vector3(0, 1, 0);\n    }\n    static get ZUnit() {\n        return new Vector3(0, 0, 1);\n    }\n    static get Zero() {\n        return new Vector3(0, 0, 0);\n    }\n    static get One() {\n        return new Vector3(1, 1, 1);\n    }\n    static copy(source) {\n        return new Vector3(source.X, source.Y, source.Z);\n    }\n    static dot(v1, v2) {\n        return vec3.dot(v1.rawElements, v2.rawElements);\n    }\n    static add(v1, v2) {\n        const newVec = vec3.create();\n        return new Vector3(vec3.add(newVec, v1.rawElements, v2.rawElements));\n    }\n    static subtract(v1, v2) {\n        const newVec = vec3.create();\n        return new Vector3(vec3.sub(newVec, v1.rawElements, v2.rawElements));\n    }\n    static multiply(s, v) {\n        const newVec = vec3.create();\n        return new Vector3(vec3.scale(newVec, v.rawElements, s));\n    }\n    static negate(v1) {\n        return Vector3.multiply(-1, v1);\n    }\n    static equals(v1, v2) {\n        return VectorBase.__elementEquals(v1, v2);\n    }\n    static nearlyEquals(v1, v2) {\n        return VectorBase.__nearlyElementEquals(v1, v2);\n    }\n    static normalize(v1) {\n        const newVec = vec3.create();\n        return new Vector3(vec3.normalize(newVec, v1.rawElements));\n    }\n    static cross(v1, v2) {\n        const newVec = vec3.create();\n        return new Vector3(vec3.cross(newVec, v1.rawElements, v2.rawElements));\n    }\n    static min(v1, v2) {\n        return new Vector3(VectorBase.__fromGenerationFunction(v1, v2, (i, _v1, _v2) => Math.min(_v1.rawElements[i], _v2.rawElements[i])));\n    }\n    static max(v1, v2) {\n        return new Vector3(VectorBase.__fromGenerationFunction(v1, v2, (i, _v1, _v2) => Math.max(_v1.rawElements[i], _v2.rawElements[i])));\n    }\n    static angle(v1, v2) {\n        return Math.acos(Vector3.dot(v1.normalized, v2.normalized));\n    }\n    static parse(str) {\n        const parseResult = VectorBase.__parse(str);\n        const elements = parseResult.elements;\n        if (!elements || (elements.length !== 1 && elements.length !== 3)) {\n            return undefined;\n        }\n        let result;\n        if (elements.length === 1) {\n            result = new Vector3(elements[0], elements[0], elements[0]);\n        }\n        else {\n            result = new Vector3(elements[0], elements[1], elements[2]);\n        }\n        if (parseResult.needNormalize) {\n            result = result.normalizeThis();\n        }\n        if (parseResult.coefficient) {\n            result = result.multiplyWith(parseResult.coefficient);\n        }\n        if (parseResult.needNegate) {\n            result = result.negateThis();\n        }\n        return result;\n    }\n    toMathematicaString() {\n        return `{${this.X},${this.Y},${this.Z}}`;\n    }\n    get normalized() {\n        return this.multiplyWith(1 / this.magnitude);\n    }\n    get X() {\n        return this.rawElements[0];\n    }\n    get Y() {\n        return this.rawElements[1];\n    }\n    get Z() {\n        return this.rawElements[2];\n    }\n    set X(x) {\n        this.rawElements[0] = +x;\n    }\n    set Y(y) {\n        this.rawElements[1] = +y;\n    }\n    set Z(z) {\n        this.rawElements[2] = +z;\n    }\n    normalizeThis() {\n        return Vector3.normalize(this);\n    }\n    dotWith(v) {\n        return Vector3.dot(this, v);\n    }\n    addWith(v) {\n        return Vector3.add(this, v);\n    }\n    subtractWith(v) {\n        return Vector3.subtract(this, v);\n    }\n    multiplyWith(s) {\n        return Vector3.multiply(s, this);\n    }\n    negateThis() {\n        return Vector3.negate(this);\n    }\n    equalWith(v) {\n        return Vector3.equals(this, v);\n    }\n    nearlyEqualWith(v) {\n        return Vector3.nearlyEquals(this, v);\n    }\n    crossWith(v) {\n        return Vector3.cross(this, v);\n    }\n    toString() {\n        return `(${this.X}, ${this.Y}, ${this.Z})`;\n    }\n    toDisplayString() {\n        return `Vector3${this.toString()}`;\n    }\n    get ElementCount() { return 3; }\n}\n\n/**\n * Axis-Aligned Bounding Box implementation\n */\nclass AABB {\n    /**\n     * Width of this AABB\n     */\n    get Width() {\n        return Math.abs(this.pointLBF.X - this.pointRTN.X);\n    }\n    /**\n     * Height of this AABB\n     */\n    get Height() {\n        return Math.abs(this.pointLBF.Y - this.pointRTN.Y);\n    }\n    /**\n     * Distance of this AABB\n     */\n    get Distance() {\n        return Math.abs(this.pointLBF.Z - this.pointRTN.Z);\n    }\n    /**\n     * Calculate new bounding box with considering the new point is included.\n     * @param  {Vector3} newPoint the point that will be considered that it should be in this bounding box.\n     */\n    expandAABB(newPoint) {\n        if (this.pointLBF == null) {\n            // assume this is first time to be used this AABB instance\n            this.pointLBF = Vector3.copy(newPoint);\n            this.pointRTN = Vector3.copy(newPoint);\n        }\n        this.pointLBF = Vector3.min(newPoint, this.pointLBF);\n        this.pointRTN = Vector3.max(newPoint, this.pointRTN);\n    }\n    /**\n     * Clean up this AABB with initial value.\n     */\n    clear() {\n        this.pointLBF = null;\n        this.pointRTN = null;\n    }\n    toMathematicaCuboid() {\n        return `Cuboid[${this.pointLBF.toMathematicaString()},${this.pointRTN.toMathematicaString()}]`;\n    }\n}\n\nclass Vector4 extends VectorBase {\n    constructor(x, y, z, w) {\n        super();\n        if (typeof y === \"undefined\") {\n            this.rawElements = x;\n            return;\n        }\n        this.rawElements = [x, y, z, w];\n    }\n    static get XUnit() {\n        return new Vector4(1, 0, 0, 0);\n    }\n    static get YUnit() {\n        return new Vector4(0, 1, 0, 0);\n    }\n    static get ZUnit() {\n        return new Vector4(0, 0, 1, 0);\n    }\n    static get WUnit() {\n        return new Vector4(0, 0, 0, 1);\n    }\n    static get One() {\n        return new Vector4(1, 1, 1, 1);\n    }\n    static get Zero() {\n        return new Vector4(0, 0, 0, 0);\n    }\n    static copy(vec) {\n        return new Vector4(vec.X, vec.Y, vec.Z, vec.W);\n    }\n    static dot(v1, v2) {\n        return vec4.dot(v1.rawElements, v2.rawElements);\n    }\n    static add(v1, v2) {\n        const newVec = vec4.create();\n        return new Vector4(vec4.add(newVec, v1.rawElements, v2.rawElements));\n    }\n    static subtract(v1, v2) {\n        const newVec = vec4.create();\n        return new Vector4(vec4.sub(newVec, v1.rawElements, v2.rawElements));\n    }\n    static multiply(s, v) {\n        const newVec = vec4.create();\n        return new Vector4(vec4.scale(newVec, v.rawElements, s));\n    }\n    static negate(v1) {\n        return Vector4.multiply(-1, v1);\n    }\n    static equals(v1, v2) {\n        return VectorBase.__elementEquals(v1, v2);\n    }\n    static nearlyEquals(v1, v2) {\n        return VectorBase.__nearlyElementEquals(v1, v2);\n    }\n    static normalize(v1) {\n        const newVec = vec4.create();\n        return new Vector4(vec4.normalize(newVec, v1.rawElements));\n    }\n    static min(v1, v2) {\n        return new Vector4(VectorBase.__fromGenerationFunction(v1, v2, (i, _v1, _v2) => Math.min(_v1.rawElements[i], _v2.rawElements[i])));\n    }\n    static max(v1, v2) {\n        return new Vector4(VectorBase.__fromGenerationFunction(v1, v2, (i, _v1, _v2) => Math.max(_v1.rawElements[i], _v2.rawElements[i])));\n    }\n    static angle(v1, v2) {\n        return Math.acos(Vector4.dot(v1.normalized, v2.normalized));\n    }\n    static parse(str) {\n        const parseResult = VectorBase.__parse(str);\n        const elements = parseResult.elements;\n        if (!elements || (elements.length !== 1 && elements.length !== 4)) {\n            return undefined;\n        }\n        let result;\n        if (elements.length === 1) {\n            result = new Vector4(elements[0], elements[0], elements[0], elements[0]);\n        }\n        else {\n            result = new Vector4(elements[0], elements[1], elements[2], elements[3]);\n        }\n        if (parseResult.needNormalize) {\n            result = result.normalizeThis();\n        }\n        if (parseResult.coefficient) {\n            result = result.multiplyWith(parseResult.coefficient);\n        }\n        if (parseResult.needNegate) {\n            result = result.negateThis();\n        }\n        return result;\n    }\n    get normalized() {\n        return this.multiplyWith(1 / this.magnitude);\n    }\n    get X() {\n        return this.rawElements[0];\n    }\n    get Y() {\n        return this.rawElements[1];\n    }\n    get Z() {\n        return this.rawElements[2];\n    }\n    get W() {\n        return this.rawElements[3];\n    }\n    set X(x) {\n        this.rawElements[0] = +x;\n    }\n    set Y(y) {\n        this.rawElements[1] = +y;\n    }\n    set Z(z) {\n        this.rawElements[2] = +z;\n    }\n    set W(w) {\n        this.rawElements[3] = +w;\n    }\n    normalizeThis() {\n        return Vector4.normalize(this);\n    }\n    dotWith(v) {\n        return Vector4.dot(this, v);\n    }\n    addWith(v) {\n        return Vector4.add(this, v);\n    }\n    subtractWith(v) {\n        return Vector4.subtract(this, v);\n    }\n    multiplyWith(s) {\n        return Vector4.multiply(s, this);\n    }\n    negateThis() {\n        return Vector4.negate(this);\n    }\n    equalWith(v) {\n        return Vector4.equals(this, v);\n    }\n    nearlyEqualWith(v) {\n        return Vector4.nearlyEquals(this, v);\n    }\n    get ElementCount() { return 4; }\n    toString() {\n        return `(${this.X}, ${this.Y}, ${this.Z}, ${this.W})`;\n    }\n    toDisplayString() {\n        return `Vector4${this.toString()}`;\n    }\n    toMathematicaString() {\n        return `{${this.X},${this.Y},${this.Z},${this.W}}`;\n    }\n}\n\nvar Colors = {\n    \"aliceblue\": \"#F0F8FF\",\n    \"antiquewhite\": \"#FAEBD7\",\n    \"aqua\": \"#00FFFF\",\n    \"aquamarine\": \"#7FFFD4\",\n    \"azure\": \"#F0FFFF\",\n    \"beige\": \"#F5F5DC\",\n    \"bisque\": \"#FFE4C4\",\n    \"black\": \"#000000\",\n    \"blanchedalmond\": \"#FFEBCD\",\n    \"blue\": \"#0000FF\",\n    \"blueviolet\": \"#8A2BE2\",\n    \"brown\": \"#A52A2A\",\n    \"burlywood\": \"#DEB887\",\n    \"cadetblue\": \"#5F9EA0\",\n    \"chartreuse\": \"#7FFF00\",\n    \"chocolate\": \"#D2691E\",\n    \"coral\": \"#FF7F50\",\n    \"cornflowerblue\": \"#6495ED\",\n    \"cornsilk\": \"#FFF8DC\",\n    \"crimson\": \"#DC143C\",\n    \"cyan\": \"#00FFFF\",\n    \"darkblue\": \"#00008B\",\n    \"darkcyan\": \"#008B8B\",\n    \"darkgoldenrod\": \"#B8860B\",\n    \"darkgray\": \"#A9A9A9\",\n    \"darkgreen\": \"#006400\",\n    \"darkgrey\": \"#A9A9A9\",\n    \"darkkhaki\": \"#BDB76B\",\n    \"darkmagenta\": \"#8B008B\",\n    \"darkolivegreen\": \"#556B2F\",\n    \"darkorange\": \"#FF8C00\",\n    \"darkorchid\": \"#9932CC\",\n    \"darkred\": \"#8B0000\",\n    \"darksalmon\": \"#E9967A\",\n    \"darkseagreen\": \"#8FBC8F\",\n    \"darkslateblue\": \"#483D8B\",\n    \"darkslategray\": \"#2F4F4F\",\n    \"darkslategrey\": \"#2F4F4F\",\n    \"darkturquoise\": \"#00CED1\",\n    \"darkviolet\": \"#9400D3\",\n    \"deeppink\": \"#FF1493\",\n    \"deepskyblue\": \"#00BFFF\",\n    \"dimgray\": \"#696969\",\n    \"dimgrey\": \"#696969\",\n    \"dodgerblue\": \"#1E90FF\",\n    \"firebrick\": \"#B22222\",\n    \"floralwhite\": \"#FFFAF0\",\n    \"forestgreen\": \"#228B22\",\n    \"fuchsia\": \"#FF00FF\",\n    \"gainsboro\": \"#DCDCDC\",\n    \"ghostwhite\": \"#F8F8FF\",\n    \"gold\": \"#FFD700\",\n    \"goldenrod\": \"#DAA520\",\n    \"gray\": \"#808080\",\n    \"green\": \"#008000\",\n    \"greenyellow\": \"#ADFF2F\",\n    \"grey\": \"#808080\",\n    \"honeydew\": \"#F0FFF0\",\n    \"hotpink\": \"#FF69B4\",\n    \"indianred\": \"#CD5C5C\",\n    \"indigo\": \"#4B0082\",\n    \"ivory\": \"#FFFFF0\",\n    \"khaki\": \"#F0E68C\",\n    \"lavender\": \"#E6E6FA\",\n    \"lavenderblush\": \"#FFF0F5\",\n    \"lawngreen\": \"#7CFC00\",\n    \"lemonchiffon\": \"#FFFACD\",\n    \"lightblue\": \"#ADD8E6\",\n    \"lightcoral\": \"#F08080\",\n    \"lightcyan\": \"#E0FFFF\",\n    \"lightgoldenrodyellow\": \"#FAFAD2\",\n    \"lightgray\": \"#D3D3D3\",\n    \"lightgreen\": \"#90EE90\",\n    \"lightgrey\": \"#D3D3D3\",\n    \"lightpink\": \"#FFB6C1\",\n    \"lightsalmon\": \"#FFA07A\",\n    \"lightseagreen\": \"#20B2AA\",\n    \"lightskyblue\": \"#87CEFA\",\n    \"lightslategray\": \"#778899\",\n    \"lightslategrey\": \"#778899\",\n    \"lightsteelblue\": \"#B0C4DE\",\n    \"lightyellow\": \"#FFFFE0\",\n    \"lime\": \"#00FF00\",\n    \"limegreen\": \"#32CD32\",\n    \"linen\": \"#FAF0E6\",\n    \"magenta\": \"#FF00FF\",\n    \"maroon\": \"#800000\",\n    \"mediumaquamarine\": \"#66CDAA\",\n    \"mediumblue\": \"#0000CD\",\n    \"mediumorchid\": \"#BA55D3\",\n    \"mediumpurple\": \"#9370DB\",\n    \"mediumseagreen\": \"#3CB371\",\n    \"mediumslateblue\": \"#7B68EE\",\n    \"mediumspringgreen\": \"#00FA9A\",\n    \"mediumturquoise\": \"#48D1CC\",\n    \"mediumvioletred\": \"#C71585\",\n    \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#F5FFFA\",\n    \"mistyrose\": \"#FFE4E1\",\n    \"moccasin\": \"#FFE4B5\",\n    \"navajowhite\": \"#FFDEAD\",\n    \"navy\": \"#000080\",\n    \"oldlace\": \"#FDF5E6\",\n    \"olive\": \"#808000\",\n    \"olivedrab\": \"#6B8E23\",\n    \"orange\": \"#FFA500\",\n    \"orangered\": \"#FF4500\",\n    \"orchid\": \"#DA70D6\",\n    \"palegoldenrod\": \"#EEE8AA\",\n    \"palegreen\": \"#98FB98\",\n    \"paleturquoise\": \"#AFEEEE\",\n    \"palevioletred\": \"#DB7093\",\n    \"papayawhip\": \"#FFEFD5\",\n    \"peachpuff\": \"#FFDAB9\",\n    \"peru\": \"#CD853F\",\n    \"pink\": \"#FFC0CB\",\n    \"plum\": \"#DDA0DD\",\n    \"powderblue\": \"#B0E0E6\",\n    \"purple\": \"#800080\",\n    \"red\": \"#FF0000\",\n    \"rosybrown\": \"#BC8F8F\",\n    \"royalblue\": \"#4169E1\",\n    \"saddlebrown\": \"#8B4513\",\n    \"salmon\": \"#FA8072\",\n    \"sandybrown\": \"#F4A460\",\n    \"seagreen\": \"#2E8B57\",\n    \"seashell\": \"#FFF5EE\",\n    \"sienna\": \"#A0522D\",\n    \"silver\": \"#C0C0C0\",\n    \"skyblue\": \"#87CEEB\",\n    \"slateblue\": \"#6A5ACD\",\n    \"slategray\": \"#708090\",\n    \"slategrey\": \"#708090\",\n    \"snow\": \"#FFFAFA\",\n    \"springgreen\": \"#00FF7F\",\n    \"steelblue\": \"#4682B4\",\n    \"tan\": \"#D2B48C\",\n    \"teal\": \"#008080\",\n    \"thistle\": \"#D8BFD8\",\n    \"tomato\": \"#FF6347\",\n    \"turquoise\": \"#40E0D0\",\n    \"violet\": \"#EE82EE\",\n    \"wheat\": \"#F5DEB3\",\n    \"white\": \"#FFFFFF\",\n    \"whitesmoke\": \"#F5F5F5\",\n    \"yellow\": \"#FFFF00\",\n    \"yellowgreen\": \"#9ACD32\"\n};\n\nclass Color4 extends VectorBase {\n    constructor(r, g, b, a) {\n        super();\n        this.rawElements = [r, g, b, a];\n    }\n    /// Color parser for css like syntax\n    static internalParse(color, isFirst, tryParse) {\n        if (isFirst && Colors[color]) {\n            return Color4.internalParse(Colors[color], false);\n        }\n        let m;\n        if (isFirst) {\n            m = color.match(/^#([0-9a-f]{3})$/i);\n            // #fff\n            if (m) {\n                const s = m[1];\n                return new Color4(parseInt(s.charAt(0), 16) / 0xf, parseInt(s.charAt(1), 16) / 0xf, parseInt(s.charAt(2), 16) / 0xf, 1);\n            }\n        }\n        if (isFirst) {\n            m = color.match(/^#([0-9a-f]{4})$/i);\n            // #ffff\n            if (m) {\n                const s = m[1];\n                return new Color4(parseInt(s.charAt(0), 16) / 0xf, parseInt(s.charAt(1), 16) / 0xf, parseInt(s.charAt(2), 16) / 0xf, parseInt(s.charAt(3), 16) / 0xf);\n            }\n        }\n        // #ffffff\n        m = color.match(/^#([0-9a-f]{6})$/i);\n        if (m) {\n            const s = m[1];\n            return new Color4(parseInt(s.substr(0, 2), 16) / 0xff, parseInt(s.substr(2, 2), 16) / 0xff, parseInt(s.substr(4, 2), 16) / 0xff, 1);\n        }\n        // #ffffffff\n        if (isFirst) {\n            m = color.match(/^#([0-9a-f]{8})$/i);\n            if (m) {\n                const s = m[1];\n                return new Color4(parseInt(s.substr(0, 2), 16) / 0xff, parseInt(s.substr(2, 2), 16) / 0xff, parseInt(s.substr(4, 2), 16) / 0xff, parseInt(s.substr(6, 2), 16) / 0xff);\n            }\n        }\n        let n = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n        if (n && isFirst) {\n            return new Color4(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff, 1);\n        }\n        n = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*(\\d+)\\s*\\)$/i);\n        if (n && isFirst) {\n            let d = parseInt(n[4], 10);\n            d = d <= 1 ? d : d / 0xff;\n            return new Color4(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff, parseInt(n[4], 10));\n        }\n        if (tryParse) {\n            return undefined;\n        }\n        throw new Error(\"Unexpected color string\" + color);\n    }\n    static parse(color, tryParse) {\n        return Color4.internalParse(color, true, tryParse);\n    }\n    static equals(col1, col2) {\n        return VectorBase.__elementEquals(col1, col2);\n    }\n    get R() {\n        return this.rawElements[0];\n    }\n    get G() {\n        return this.rawElements[1];\n    }\n    get B() {\n        return this.rawElements[2];\n    }\n    get A() {\n        return this.rawElements[3];\n    }\n    toVector() {\n        return new Vector4(this.R, this.G, this.B, this.A);\n    }\n    get ElementCount() {\n        return 4;\n    }\n    equalWith(col) {\n        return Color4.equals(col, this);\n    }\n    toString() {\n        return `rgba(${Math.round(this.R * 255)}, ${Math.round(this.G * 255)}, ${Math.round(this.B * 255)}, ${Math.round(this.A * 255)})`;\n    }\n    toDisplayString() {\n        let st = \"#\";\n        st += Math.round(this.R * 0xff).toString(16).toUpperCase();\n        st += Math.round(this.G * 0xff).toString(16).toUpperCase();\n        st += Math.round(this.B * 0xff).toString(16).toUpperCase();\n        st += Math.round(this.A * 0xff).toString(16).toUpperCase();\n        return `Color4(${this.R}, ${this.G}, ${this.B}, ${this.A}, ${st})`;\n    }\n}\n\nclass Color3 extends VectorBase {\n    constructor(r, g, b) {\n        super();\n        this.rawElements = [r, g, b];\n    }\n    static fromColor4(col) {\n        return new Color3(col.R, col.G, col.B);\n    }\n    static parse(color, tryParse) {\n        return Color3.internalParse(color, true, tryParse);\n    }\n    /// Color parser for css like syntax\n    static internalParse(color, isFirst, tryParse) {\n        if (isFirst && Colors[color]) {\n            const col = Color4.internalParse(Colors[color], false, tryParse);\n            return Color3.fromColor4(col);\n        }\n        let m;\n        if (isFirst) {\n            m = color.match(/^#([0-9a-f]{3})$/i);\n            // #fff\n            if (m) {\n                const s = m[1];\n                return new Color3(parseInt(s.charAt(0), 16) / 0xf, parseInt(s.charAt(1), 16) / 0xf, parseInt(s.charAt(2), 16) / 0xf);\n            }\n        }\n        // #ffffff\n        m = color.match(/^#([0-9a-f]{6})$/i);\n        if (m) {\n            const s = m[1];\n            return new Color3(parseInt(s.substr(0, 2), 16) / 0xff, parseInt(s.substr(2, 2), 16) / 0xff, parseInt(s.substr(4, 2), 16) / 0xff);\n        }\n        const n = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n        if (n && isFirst) {\n            return new Color3(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff);\n        }\n        if (tryParse) {\n            return undefined;\n        }\n        throw new Error(\"Unexpected color string\" + color);\n    }\n    static equals(col1, col2) {\n        return VectorBase.__elementEquals(col1, col2);\n    }\n    toVector() {\n        return new Vector3(this.R, this.G, this.B);\n    }\n    toVector4(a) {\n        if (typeof a === \"undefined\") {\n            a = 0;\n        }\n        return new Vector4(this.R, this.G, this.B, a);\n    }\n    get R() {\n        return this.rawElements[0];\n    }\n    get G() {\n        return this.rawElements[1];\n    }\n    get B() {\n        return this.rawElements[2];\n    }\n    get ElementCount() {\n        return 3;\n    }\n    equalWith(col) {\n        return Color3.equals(col, this);\n    }\n    toString() {\n        return `rgb(${Math.round(this.R * 255)}, ${Math.round(this.G * 255)}, ${Math.round(this.B * 255)})`;\n    }\n    toDisplayString() {\n        let st = \"#\";\n        st += Math.round(this.R * 0xff).toString(16).toUpperCase();\n        st += Math.round(this.G * 0xff).toString(16).toUpperCase();\n        st += Math.round(this.B * 0xff).toString(16).toUpperCase();\n        return `Color3(${this.R}, ${this.G}, ${this.B}, ${st})`;\n    }\n}\n\nclass Vector2 extends VectorBase {\n    constructor(x, y) {\n        super();\n        if (typeof y === \"undefined\") {\n            this.rawElements = x;\n            return;\n        }\n        this.rawElements = [x, y];\n    }\n    static get XUnit() {\n        return new Vector2(1, 0);\n    }\n    static get YUnit() {\n        return new Vector2(0, 1);\n    }\n    static get One() {\n        return new Vector2(1, 1);\n    }\n    static get Zero() {\n        return new Vector2(0, 0);\n    }\n    static copy(vec) {\n        return new Vector2(vec.X, vec.Y);\n    }\n    static parse(str) {\n        const parseResult = VectorBase.__parse(str);\n        const elements = parseResult.elements;\n        if (elements.length !== 1 && elements.length !== 2) {\n            return undefined;\n        }\n        let result;\n        if (elements.length === 1) {\n            result = new Vector2(elements[0], elements[0]);\n        }\n        else {\n            result = new Vector2(elements[0], elements[1]);\n        }\n        if (parseResult.needNormalize) {\n            result = result.normalizeThis();\n        }\n        if (parseResult.coefficient) {\n            result = result.multiplyWith(parseResult.coefficient);\n        }\n        if (parseResult.needNegate) {\n            result = result.negateThis();\n        }\n        return result;\n    }\n    static dot(v1, v2) {\n        return vec2.dot(v1.rawElements, v2.rawElements);\n    }\n    static add(v1, v2) {\n        const newVec = vec2.create();\n        return new Vector2(vec2.add(newVec, v1.rawElements, v2.rawElements));\n    }\n    static subtract(v1, v2) {\n        const newVec = vec2.create();\n        return new Vector2(vec2.sub(newVec, v1.rawElements, v2.rawElements));\n    }\n    static multiply(s, v) {\n        const newVec = vec2.create();\n        return new Vector2(vec2.scale(newVec, v.rawElements, s));\n    }\n    static negate(v1) {\n        return Vector2.multiply(-1, v1);\n    }\n    static equals(v1, v2) {\n        return VectorBase.__elementEquals(v1, v2);\n    }\n    static nearlyEquals(v1, v2) {\n        return VectorBase.__nearlyElementEquals(v1, v2);\n    }\n    static normalize(v1) {\n        const newVec = vec2.create();\n        return new Vector2(vec2.normalize(newVec, v1.rawElements));\n    }\n    static min(v1, v2) {\n        return new Vector2(VectorBase.__fromGenerationFunction(v1, v2, (i, v1_, v2_) => Math.min(v1_.rawElements[i], v2_.rawElements[i])));\n    }\n    static max(v1, v2) {\n        return new Vector2(VectorBase.__fromGenerationFunction(v1, v2, (i, v1_, v2_) => Math.max(v1_.rawElements[i], v2_.rawElements[i])));\n    }\n    static angle(v1, v2) {\n        return Math.acos(Vector2.dot(v1.normalized, v2.normalized));\n    }\n    get normalized() {\n        return this.multiplyWith(1 / this.magnitude);\n    }\n    get X() {\n        return this.rawElements[0];\n    }\n    get Y() {\n        return this.rawElements[1];\n    }\n    set X(x) {\n        this.rawElements[0] = +x;\n    }\n    set Y(y) {\n        this.rawElements[1] = +y;\n    }\n    dotWith(v) {\n        return Vector2.dot(this, v);\n    }\n    addWith(v) {\n        return Vector2.add(this, v);\n    }\n    subtractWith(v) {\n        return Vector2.subtract(v, this);\n    }\n    multiplyWith(s) {\n        return Vector2.multiply(s, this);\n    }\n    negateThis() {\n        return Vector2.negate(this);\n    }\n    equalWith(v) {\n        return Vector2.equals(this, v);\n    }\n    nearlyEqualWith(v) {\n        return Vector2.nearlyEquals(this, v);\n    }\n    normalizeThis() {\n        return Vector2.normalize(this);\n    }\n    toString() {\n        return `(${this.X}, ${this.Y})`;\n    }\n    toDisplayString() {\n        return `Vector2${this.toString()}`;\n    }\n    get ElementCount() { return 2; }\n    toMathematicaString() {\n        return `{${this.X}, ${this.Y}}`;\n    }\n}\n\nclass MatrixBase {\n    static __elementEquals(m1, m2) {\n        if (m1.RowCount !== m2.RowCount || m1.ColmunCount !== m2.ColmunCount) {\n            return false;\n        }\n        const count = m1.RowCount * m2.ColmunCount;\n        for (let i = 0; i < count; i++) {\n            if (m1.getBySingleIndex(i) !== m2.getBySingleIndex(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    get RowCount() {\n        return 0;\n    }\n    get ColmunCount() {\n        return 0;\n    }\n    getAt(row, colmun) {\n        throw new Error(\"Not implemented\");\n    }\n    getBySingleIndex(index) {\n        throw new Error(\"Not implemented\");\n    }\n}\n\nclass Matrix extends MatrixBase {\n    constructor(arr) {\n        super();\n        if (arr) {\n            this.rawElements = arr;\n        }\n        else {\n            this.rawElements = mat4.create();\n        }\n    }\n    static zero() {\n        return new Matrix([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    }\n    static identity() {\n        return new Matrix(mat4.create());\n    }\n    static fromElements(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        return new Matrix([m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33]);\n    }\n    static fromFunc(f) {\n        return new Matrix([f(0, 0), f(1, 0), f(2, 0), f(3, 0), f(0, 1), f(1, 1), f(2, 1), f(3, 1), f(0, 2), f(1, 2), f(2, 2), f(3, 2), f(0, 3), f(1, 3), f(2, 3), f(3, 3)]);\n    }\n    static equals(m1, m2) {\n        return Matrix.__elementEquals(m1, m2);\n    }\n    static add(m1, m2) {\n        const mat = mat4.create();\n        for (let i = 0; i < 16; i++) {\n            mat[i] = m1.rawElements[i] + m2.rawElements[i];\n        }\n        return new Matrix(mat);\n    }\n    static subtract(m1, m2) {\n        return Matrix.add(m1, Matrix.negate(m2));\n    }\n    static scalarMultiply(s, m) {\n        const newMat = mat4.create();\n        mat4.multiply(newMat, [s, 0, 0, 0, 0, s, 0, 0, 0, 0, s, 0, 0, 0, 0, s], m.rawElements);\n        return new Matrix(newMat);\n    }\n    static multiply(m1, m2) {\n        const newMat = mat4.create();\n        return new Matrix(mat4.mul(newMat, m1.rawElements, m2.rawElements));\n    }\n    static trs(t, rot, s) {\n        const newMat = mat4.create();\n        const cacheMat = mat4.create();\n        mat4.mul(newMat, mat4.translate(newMat, mat4.create(), t.rawElements), mat4.fromQuat(cacheMat, rot.rawElements));\n        mat4.scale(newMat, newMat, s.rawElements);\n        return new Matrix(newMat);\n    }\n    static negate(m) {\n        return this.scalarMultiply(-1, m);\n    }\n    static transpose(m) {\n        const newMat = mat4.create();\n        return new Matrix(mat4.transpose(newMat, m.rawElements));\n    }\n    static transformPoint(m, t) {\n        const newVec = vec3.create();\n        vec3.transformMat4(newVec, t.rawElements, m.rawElements);\n        return new Vector3(newVec);\n    }\n    static transformNormal(m, t) {\n        const newVec = vec4.create();\n        const trans = vec4.create();\n        trans[0] = t.X;\n        trans[1] = t.Y;\n        trans[2] = t.Z;\n        trans[3] = 0;\n        vec4.transformMat4(newVec, trans, m.rawElements);\n        return new Vector3(newVec[0], newVec[1], newVec[2]);\n    }\n    static transform(m, t) {\n        const newVec = vec4.create();\n        const trans = vec4.create();\n        trans[0] = t.X;\n        trans[1] = t.Y;\n        trans[2] = t.Z;\n        trans[3] = t.W;\n        vec4.transformMat4(newVec, trans, m.rawElements);\n        return new Vector4(newVec[0], newVec[1], newVec[2], newVec[3]);\n    }\n    /**\n     * Retrieve determinant of passed matrix\n     */\n    static determinant(m) {\n        return mat4.determinant(m.rawElements);\n    }\n    /**\n     * Compute inverted passed matrix.\n     */\n    static inverse(m) {\n        const newMat = mat4.create();\n        return new Matrix(mat4.invert(newMat, m.rawElements));\n    }\n    /**\n     * Generate linear translation transform matrix.\n     */\n    static translate(v) {\n        const newMat = mat4.create();\n        mat4.translate(newMat, newMat, v.rawElements);\n        return new Matrix(newMat);\n    }\n    /**\n     * Generate linear scaling transform matrix.\n     */\n    static scale(v) {\n        const newMat = mat4.create();\n        mat4.scale(newMat, newMat, v.rawElements);\n        return new Matrix(newMat);\n    }\n    static rotateX(angle) {\n        const newMat = mat4.create();\n        mat4.rotateX(newMat, newMat, angle);\n        return new Matrix(newMat);\n    }\n    static rotateY(angle) {\n        const newMat = mat4.create();\n        mat4.rotateY(newMat, newMat, angle);\n        return new Matrix(newMat);\n    }\n    static rotateZ(angle) {\n        const newMat = mat4.create();\n        mat4.rotateZ(newMat, newMat, angle);\n        return new Matrix(newMat);\n    }\n    static rotationQuaternion(quat_) {\n        const quaternion = quat.create();\n        const newMat = mat4.create();\n        quat.normalize(quaternion, quat_.rawElements);\n        mat4.fromQuat(newMat, quaternion);\n        return new Matrix(newMat);\n    }\n    static frustum(left, right, bottom, top, near, far) {\n        const newMat = mat4.create();\n        mat4.frustum(newMat, left, right, bottom, top, near, far);\n        return new Matrix(newMat);\n    }\n    static ortho(left, right, bottom, top, near, far) {\n        const newMat = mat4.create();\n        mat4.ortho(newMat, left, right, bottom, top, near, far);\n        return new Matrix(newMat);\n    }\n    static perspective(fovy, aspect, near, far) {\n        const newMat = mat4.create();\n        mat4.perspective(newMat, fovy, aspect, near, far);\n        return new Matrix(newMat);\n    }\n    static lookAt(eye, lookAt, up) {\n        const newMat = mat4.create();\n        mat4.lookAt(newMat, eye.rawElements, lookAt.rawElements, up.rawElements);\n        return new Matrix(newMat);\n    }\n    getAt(row, colmun) {\n        return this.rawElements[colmun * 4 + row];\n    }\n    setAt(row, colmun, val) {\n        this.rawElements[colmun * 4 + row] = val;\n    }\n    getBySingleIndex(index) {\n        return this.rawElements[index];\n    }\n    getColmun(col) {\n        return new Vector4(this.rawElements[col * 4], this.rawElements[col * 4 + 1], this.rawElements[col * 4 + 2], this.rawElements[col * 4 + 3]);\n    }\n    /**\n    * Get row\n    * @params row [0-3]\n    */\n    getRow(row) {\n        return new Vector4(this.rawElements[row], this.rawElements[row + 4], this.rawElements[row + 8], this.rawElements[row + 12]);\n    }\n    multiplyWith(m) {\n        return Matrix.multiply(this, m);\n    }\n    equalWith(m) {\n        return Matrix.equals(m, this);\n    }\n    toString() {\n        return (`|${this.getBySingleIndex(0)} ${this.getBySingleIndex(4)} ${this.getBySingleIndex(8)} ${this.getBySingleIndex(12)}|\\n\n                 |${this.getBySingleIndex(1)} ${this.getBySingleIndex(5)} ${this.getBySingleIndex(9)} ${this.getBySingleIndex(13)}|\\n\n                 |${this.getBySingleIndex(2)} ${this.getBySingleIndex(6)} ${this.getBySingleIndex(10)} ${this.getBySingleIndex(14)}|\\n\n                 |${this.getBySingleIndex(3)} ${this.getBySingleIndex(7)} ${this.getBySingleIndex(11)} ${this.getBySingleIndex(15)}|`);\n    }\n    toMathematicaString() {\n        return (`{{${this.getBySingleIndex(0)},${this.getBySingleIndex(4)},${this.getBySingleIndex(8)},${this.getBySingleIndex(12)}},\n                  {${this.getBySingleIndex(1)},${this.getBySingleIndex(5)},${this.getBySingleIndex(9)},${this.getBySingleIndex(13)}},\n                  {${this.getBySingleIndex(2)},${this.getBySingleIndex(6)},${this.getBySingleIndex(10)},${this.getBySingleIndex(14)}},\n                  {${this.getBySingleIndex(3)},${this.getBySingleIndex(7)},${this.getBySingleIndex(11)},${this.getBySingleIndex(15)}}}`);\n    }\n    get ElementCount() { return 16; }\n    get RowCount() { return 4; }\n    get ColmunCount() { return 4; }\n}\n\n/**\n* The class to maniplate quaternion.\n* Basically,you don't need to operate raw element.\n* You consider to use some of useful methods without editing raw element forcelly.\n* Each element will be represented as (w;x,y,z)\n* (1,i,j,k) is base axis for quaternion. (i,j,k is pure imaginary number)\n* (w;x,y,z) means w*1+x*i+y*j+z*k\n*\n*/\nclass Quaternion {\n    /**\n    * Constructor by specifing each elements.\n    */\n    constructor(rawElements) {\n        this.rawElements = rawElements;\n    }\n    static equals(q1, q2) {\n        for (let i = 0; i < 4; i++) {\n            if (q1.rawElements[i] !== q2.rawElements[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n    * Calculate add result of two quaternion\n    */\n    static add(q1, q2) {\n        const newQuat = quat.create();\n        return new Quaternion(quat.add(newQuat, q1.rawElements, q2.rawElements));\n    }\n    /**\n    * Calculate multiply result of two quaternion\n    */\n    static multiply(q1, q2) {\n        const newQuat = quat.create();\n        return new Quaternion(quat.mul(newQuat, q1.rawElements, q2.rawElements));\n    }\n    /**\n    * Calculate the rotation quaternion represented as pair of angle and axis.\n    */\n    static angleAxis(angle, axis) {\n        const axisVec = vec3.create();\n        axisVec[0] = axis.X;\n        axisVec[1] = axis.Y;\n        axisVec[2] = axis.Z;\n        const newQuat = quat.create();\n        return new Quaternion(quat.setAxisAngle(newQuat, axisVec, +angle));\n    }\n    static euler(x, y, z) {\n        return Quaternion.multiply(Quaternion.angleAxis(z, Vector3.ZUnit), Quaternion.multiply(Quaternion.angleAxis(x, Vector3.XUnit), Quaternion.angleAxis(y, Vector3.YUnit)));\n    }\n    static eulerXYZ(x, y, z) {\n        return Quaternion.multiply(Quaternion.angleAxis(z, Vector3.ZUnit), Quaternion.multiply(Quaternion.angleAxis(y, Vector3.YUnit), Quaternion.angleAxis(x, Vector3.XUnit)));\n    }\n    static slerp(q1, q2, t) {\n        const newQuat = quat.create();\n        return new Quaternion(quat.slerp(newQuat, q1.rawElements, q2.rawElements, +t));\n    }\n    /**\n     * Returns the angle in degrees between two rotations q1 and q2.\n     * @param q1 the quaternion represents begin angle.\n     * @param q2 the quaternion represents end angle.\n     * @returns {number} angle represented in radians.\n     */\n    static angle(q1, q2) {\n        let delta = Quaternion.multiply(q2, q1.inverse());\n        delta = delta.normalize();\n        return 2 * Math.acos(delta.W);\n    }\n    static fromToRotation(from, to) {\n        const crossed = Vector3.cross(from.normalized, to.normalized);\n        const angle = Vector3.dot(from.normalized, to.normalized);\n        return Quaternion.angleAxis(angle, crossed);\n    }\n    static lookRotation(forward, upVec) {\n        upVec = upVec || Vector3.YUnit;\n        const normalizedForward = forward.normalized;\n        const upForwardCross = Vector3.cross(upVec, normalizedForward).normalized;\n        const thirdAxis = Vector3.cross(normalizedForward, upForwardCross);\n        const m00 = upForwardCross.X;\n        const m01 = upForwardCross.Y;\n        const m02 = upForwardCross.Z;\n        const m10 = thirdAxis.X;\n        const m11 = thirdAxis.Y;\n        const m12 = thirdAxis.Z;\n        const m20 = normalizedForward.X;\n        const m21 = normalizedForward.Y;\n        const m22 = normalizedForward.Z;\n        const num8 = m00 + m11 + m22;\n        if (num8 > 0) {\n            const num = Math.sqrt(1 + num8);\n            return new Quaternion([(m12 - m21) * 0.5 / num, (m20 - m02) * 0.5 / num, (m01 - m10) * 0.5 / num, num / 2]);\n        }\n        if (m00 >= m11 && m00 >= m22) {\n            const num7 = Math.sqrt(1 + m00 - m11 - m22);\n            return new Quaternion([(m01 + m10) * 0.5 / num7, (m02 + m20) * 0.5 / num7, (m12 - m21) * 0.5 / num7, num7 / 2]);\n        }\n        if (m11 > m22) {\n            const num6 = Math.sqrt(1 + m11 - m00 - m22);\n            return new Quaternion([(m10 + m01) * 0, 5 / num6, 0.5 * num6, (m21 + m12) * 0.5 / num6, (m20 - m02) * 0.5 / num6]);\n        }\n        const num5 = Math.sqrt(1 + m22 - m00 - m11);\n        return new Quaternion([(m20 + m02) * 0.5 / num5, (m21 + m12) * 0.5 / num5, 0.5 * num5, (m01 - m10) * 0.5 / num5]);\n    }\n    static get Identity() {\n        return new Quaternion(quat.create());\n    }\n    get eularAngles() {\n        const eular = this.factoringQuaternionZXY();\n        return new Vector3(eular.x, eular.y, eular.z);\n    }\n    set eularAngles(v) {\n        this.rawElements = Quaternion.euler(v.X, v.Y, v.Z).rawElements;\n    }\n    /**\n    * Getter for X.\n    */\n    get X() {\n        return this.rawElements[0];\n    }\n    /**\n    * Getter for Y.\n    */\n    get Y() {\n        return this.rawElements[1];\n    }\n    /**\n    * Getter for Z.\n    */\n    get Z() {\n        return this.rawElements[2];\n    }\n    /**\n    * Getter for W.\n    */\n    get W() {\n        return this.rawElements[3];\n    }\n    /**\n    * Getter for imaginary part vector.\n    * It returns the vector (x,y,z)\n    */\n    get ImaginaryPart() {\n        return new Vector3(this.X, this.Y, this.Z);\n    }\n    /**\n    * Get the conjugate of this quaternion\n    */\n    get Conjugate() {\n        const newQuat = quat.create();\n        return new Quaternion(quat.conjugate(newQuat, this.rawElements));\n    }\n    /**\n    * Get the length\n    */\n    get Length() {\n        return quat.len(this.rawElements);\n    }\n    equalWith(q) {\n        return Quaternion.equals(this, q);\n    }\n    /**\n    * Get normalized quaternion\n    */\n    normalize() {\n        const newQuat = quat.create();\n        return new Quaternion(quat.normalize(newQuat, this.rawElements));\n    }\n    inverse() {\n        const newQuat = quat.create();\n        return new Quaternion(quat.invert(newQuat, this.rawElements));\n    }\n    toAngleAxisString() {\n        const angle = 2 * Math.acos(this.W);\n        const imm = Math.sqrt(1 - this.W * this.W);\n        if (angle !== 180 && angle !== 0) {\n            return `axis(${angle},${this.X / imm},${this.Y / imm},${this.Z / imm})`;\n        }\n        else if (angle === 0) {\n            return `axis(${angle},0,1,0)`;\n        }\n        else {\n            return `axis(180d,${this.X},${this.Y},${this.Z})`;\n        }\n    }\n    toString() {\n        return this.toAngleAxisString();\n    }\n    factoringQuaternionZXY() {\n        const result = { x: 0, y: 0, z: 0 };\n        const mat = Matrix.rotationQuaternion(this);\n        const sx = mat.rawElements[6];\n        if (Math.abs(sx) < 1 - 1.0E-4) {\n            result.x = Math.asin(sx);\n            result.z = Math.atan2(-mat.rawElements[4], mat.rawElements[5]);\n            result.y = Math.atan2(-mat.rawElements[2], mat.rawElements[10]);\n        }\n        else {\n            result.y = 0;\n            result.x = Math.PI / 2 * sx;\n            result.z = Math.atan2(mat.rawElements[1], mat.rawElements[0]);\n        }\n        return result;\n    }\n    factoringQuaternionXYZ() {\n        const result = { x: 0, y: 0, z: 0 };\n        const mat = Matrix.rotationQuaternion(this);\n        const sy = -mat.rawElements[2];\n        if (Math.abs(sy) < 1 - 1.0E-4) {\n            result.x = Math.atan2(mat.rawElements[6], mat.rawElements[10]);\n            result.y = Math.asin(sy);\n            result.z = Math.atan2(mat.rawElements[1], mat.rawElements[0]);\n        }\n        else {\n            result.x = 0;\n            result.y = Math.PI / 2 * sy;\n            result.z = Math.atan2(-mat.rawElements[4], mat.rawElements[5]);\n        }\n        return result;\n    }\n}\n\nclass Rectangle {\n    constructor(left, top, width, height) {\n        this._left = left;\n        this._top = top;\n        this._width = width;\n        this._height = height;\n    }\n    static equals(r1, r2) {\n        return r1.Left === r2.Left && r1.Right === r2.Right && r1.Top === r2.Top && r1.Bottom === r2.Bottom;\n    }\n    static edgeSizeEquals(r1, r2) {\n        return r1.Width === r2.Width && r1.Height === r2.Height;\n    }\n    get Left() {\n        return this._left;\n    }\n    get Right() {\n        return this.Left + this.Width;\n    }\n    get Top() {\n        return this._top;\n    }\n    get Bottom() {\n        return this._top + this._height;\n    }\n    get Width() {\n        return this._width;\n    }\n    get Height() {\n        return this._height;\n    }\n    contains(xOrPoint, y) {\n        let x;\n        if (xOrPoint instanceof Vector2) {\n            x = xOrPoint.X;\n            y = xOrPoint.Y;\n        }\n        else {\n            x = xOrPoint;\n        }\n        return this.Left <= x && this.Right >= x && this.Top <= y && this.Bottom >= y;\n    }\n    toLocal(xOrPoint, y) {\n        let x;\n        if (xOrPoint instanceof Vector2) {\n            x = xOrPoint.X;\n            y = xOrPoint.Y;\n        }\n        else {\n            x = xOrPoint;\n        }\n        x -= this.Left;\n        y -= this.Top;\n        return xOrPoint instanceof Vector2 ? new Vector2(x, y) : [x, y];\n    }\n    toString() {\n        return `Rectangle(${this.Left},${this.Top}-${this.Right},${this.Bottom})`;\n    }\n}\n\nexports.AABB = AABB;\nexports.Color3 = Color3;\nexports.Color4 = Color4;\nexports.Vector2 = Vector2;\nexports.Vector3 = Vector3;\nexports.Vector4 = Vector4;\nexports.Matrix = Matrix;\nexports.Quaternion = Quaternion;\nexports.Rectangle = Rectangle;\n//# sourceMappingURL=index.es2016.js.map\n"]}