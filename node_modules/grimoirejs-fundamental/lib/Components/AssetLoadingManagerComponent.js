import AssetLoader from "../Asset/AssetLoader";
import Component from "grimoirejs/lib/Node/Component";
import gr from "grimoirejs";
import DefaultLoaderChunk from "../Asset/defaultLoader.html";
export default class AssetLoadingManagerComponent extends Component {
    constructor(...args) {
        super(...args);
        this.loader = new AssetLoader();
    }
    $treeInitialized() {
        if (this.attributes.get("autoStart").Value) {
            this._autoStart();
        }
        this._documentResolver();
    }
    $awake() {
        this.companion.set(gr.ns(this.name.ns)("loader"), this.loader);
        this.loader.register(new Promise((resolve) => { this._documentResolver = resolve; }));
        const canvas = this.companion.get("canvasElement");
        canvas.style.position = "absolute";
        canvas.style.top = "0px";
        const canvasContainer = document.createElement("div");
        canvasContainer.style.width = canvas.width + "px";
        canvasContainer.style.height = canvas.height + "px";
        canvasContainer.style.position = "relative";
        const loaderContainer = document.createElement("div");
        loaderContainer.innerHTML = DefaultLoaderChunk;
        loaderContainer.style.width = loaderContainer.style.height = "100%";
        canvasContainer.appendChild(loaderContainer);
        canvas.parentElement.replaceChild(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        this._loaderElement = loaderContainer;
    }
    _autoStart() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loader.promise;
            this._loaderElement.remove();
            this.tree("goml").attr("loopEnabled", true);
        });
    }
}
AssetLoadingManagerComponent.attributes = {
    loadingProgress: {
        defaultValue: 0,
        converter: "Number"
    },
    autoStart: {
        defaultValue: true,
        converter: "Boolean"
    }
};
//# sourceMappingURL=AssetLoadingManagerComponent.js.map