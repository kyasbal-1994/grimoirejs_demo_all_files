import GeometryFactory from "../Geometry/GeometryFactory";
import Component from "grimoirejs/lib/Node/Component";
export default class GeometryComponent extends Component {
    $mount() {
        const type = this.getValue("type");
        if (type) {
            const gf = this.companion.get("GeometryFactory");
            const attrs = GeometryFactory.factoryArgumentDeclarations[type];
            const geometryArgument = {};
            for (let key in attrs) {
                this.__addAtribute(key, attrs[key]);
                geometryArgument[key] = this.getValue(key);
            }
            this.geometry = gf.instanciate(type, geometryArgument);
            const gr = this.companion.get("GeometryRegistory");
            const name = this.getValue("name");
            if (!name) {
                throw new Error("Name was not specified");
            }
            gr.addGeometry(name, this.geometry);
        }
    }
}
GeometryComponent.attributes = {
    type: {
        converter: "String",
        defaultValue: undefined
    },
    name: {
        converter: "String",
        defaultValue: undefined
    }
};
//# sourceMappingURL=GeometryComponent.js.map