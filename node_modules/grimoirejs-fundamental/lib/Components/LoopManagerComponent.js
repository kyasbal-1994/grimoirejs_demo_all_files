import Component from "grimoirejs/lib/Node/Component";
class LoopManagerComponent extends Component {
    constructor(...args) {
        super(...args);
        this._loopActions = [];
    }
    $awake() {
        this.attributes.get("loopEnabled").addObserver((attr) => {
            this._begin();
        });
        this._registerNextLoop =
            window.requestAnimationFrame // if window.requestAnimationFrame is defined or undefined
                ?
                        () => {
                        window.requestAnimationFrame(this._loop.bind(this));
                    }
                :
                        () => {
                        window.setTimeout(this._loop.bind(this), 1000 / 60);
                    };
    }
    register(action, priorty) {
        this._loopActions.push({
            action: action,
            priorty: priorty
        });
        this._loopActions.sort((a, b) => a.priorty - b.priorty);
    }
    _begin() {
        this._registerNextLoop();
    }
    _loop() {
        this._loopActions.forEach((a) => a.action());
        this._registerNextLoop();
    }
}
LoopManagerComponent.attributes = {
    loopEnabled: {
        defaultValue: false,
        converter: "Boolean"
    }
};
export default LoopManagerComponent;
//# sourceMappingURL=LoopManagerComponent.js.map