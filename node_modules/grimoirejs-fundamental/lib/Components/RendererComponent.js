import Component from "grimoirejs/lib/Node/Component";
export default class RendererComponent extends Component {
    constructor(...args) {
        super(...args);
        this._buffers = {};
    }
    $mount() {
        this._gl = this.companion.get("gl");
        this._canvas = this.companion.get("canvasElement");
        this._camera = this.getValue("camera");
        this.attributes.get("camera").addObserver((v) => this._camera = v.Value);
        this._viewport = this.getValue("viewport");
        this.attributes.get("viewport").addObserver((v) => this._viewport = v.Value);
    }
    $treeInitialized() {
        this.node.broadcastMessage(1, "resizeBuffer", {
            width: this._viewport.Width,
            height: this._viewport.Height,
            buffers: this._buffers
        });
        this.node.broadcastMessage(1, "bufferUpdated", {
            buffers: this._buffers
        });
    }
    $renderScene() {
        if (this._camera) {
            this.node.broadcastMessage(1, "render", {
                camera: this._camera,
                viewport: this._viewport,
                buffers: this._buffers
            });
        }
    }
}
RendererComponent.attributes = {
    camera: {
        converter: "Component",
        defaultValue: "camera",
        target: "CAMERA"
    },
    viewport: {
        converter: "Viewport",
        defaultValue: "auto"
    }
};
//# sourceMappingURL=RendererComponent.js.map