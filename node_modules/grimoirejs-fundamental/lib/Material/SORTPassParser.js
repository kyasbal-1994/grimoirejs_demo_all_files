import UniformRegisterer from "./Transformers/UniformRegisterer";
import CommentRemover from "./Transformers/CommentRemover";
import ImportTransformer from "./Transformers/ImportTransformer";
import VariableParser from "./Transformers/VariableParser";
import ShaderSeparator from "./Transformers/ShaderSeparator";
import AttributeVariableRemover from "./Transformers/AttributeVariableRemover";
import VariableAnnotationRemover from "./Transformers/VariableAnnotationRemover";
import PrecisionParser from "./Transformers/PrecisionParser";
import PrecisionComplementer from "./Transformers/PrecisionComplementer";
import BasicGLConfigParser from "./Transformers/BasicGLConfigParser";
import AnnotationRemover from "./Transformers/AnnotationRemover";
export default class SORTPassParser {
    static parse(source) {
        return __awaiter(this, void 0, void 0, function* () {
            let transformingInfo = {
                origin: source,
                transforming: source,
                info: {
                    fragment: "",
                    vertex: "",
                    uniforms: {},
                    attributes: {},
                    vertexPrecision: {},
                    fragmentPrecision: {},
                    configurator: [],
                    systemRegisterers: [],
                    gomlAttributes: {}
                }
            };
            for (let i = 0; i < SORTPassParser.transformers.length; i++) {
                transformingInfo = yield SORTPassParser.transformers[i](transformingInfo);
            }
            return transformingInfo.info;
        });
    }
}
SORTPassParser.transformers = [
    CommentRemover,
    ImportTransformer,
    VariableParser("uniform"),
    VariableParser("attribute"),
    BasicGLConfigParser,
    AnnotationRemover,
    ShaderSeparator,
    AttributeVariableRemover,
    VariableAnnotationRemover,
    PrecisionParser,
    PrecisionComplementer,
    UniformRegisterer
];
//# sourceMappingURL=SORTPassParser.js.map