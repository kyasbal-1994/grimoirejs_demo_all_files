import ImportResolver from "../ImportResolver";
function _parseImport(source) {
    return __awaiter(this, void 0, void 0, function* () {
        while (true) {
            const regexResult = /\s*@import\s+"([^"]+)"/.exec(source);
            if (!regexResult) {
                break;
            }
            let importContent;
            importContent = yield _parseImport(yield ImportResolver.resolve(regexResult[1]));
            if (!importContent) {
                throw new Error(`Required shader chunk '${regexResult[1]}' was not found!!`);
            }
            source = source.replace(regexResult[0], `\n${importContent}\n`);
        }
        return source;
    });
}
export default function (input) {
    return __awaiter(this, void 0, void 0, function* () {
        const transformed = yield _parseImport(input.transforming);
        input.transforming = transformed;
        return input;
    });
}
//# sourceMappingURL=ImportTransformer.js.map