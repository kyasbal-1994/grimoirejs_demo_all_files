import ResourceBase from "./ResourceBase";
export default class Buffer extends ResourceBase {
    constructor(gl, target, usage) {
        super(gl);
        this.target = target;
        this.usage = usage;
        this.buffer = gl.createBuffer();
    }
    update(length, subBuffer) {
        this.bind();
        if (subBuffer) {
            if (!this.valid) {
                this.gl.bufferData(this.target, length + subBuffer.byteLength, this.usage);
            }
            this.gl.bufferSubData(this.target, length, subBuffer);
        }
        else {
            if (typeof length === "number") {
                this.gl.bufferData(this.target, length, this.usage);
            }
            else {
                this.gl.bufferData(this.target, length, this.usage);
            }
        }
        this.valid = true;
    }
    bind() {
        this.gl.bindBuffer(this.target, this.buffer);
    }
    destroy() {
        super.destroy();
        this.gl.deleteBuffer(this.buffer);
    }
}
//# sourceMappingURL=Buffer.js.map